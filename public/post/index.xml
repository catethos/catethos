<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Categorical Ethos </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/post/index.xml</link>
    <language>en-us</language>
    
    
    <updated>Sun, 13 Jul 2014 07:25:26 UTC</updated>
    
    <item>
      <title>Study Materials for Communicating Sequential Processes(CSP)</title>
      <link>http://localhost:1313/post/20140713_csp</link>
      <pubDate>Sun, 13 Jul 2014 07:25:26 UTC</pubDate>
      
      <guid>http://localhost:1313/post/20140713_csp</guid>
      <description>

&lt;p&gt;I have just started to learn about concurrency.
&lt;a href=&#34;http://www.usingcsp.com/cspbook.pdf&#34;&gt;Communicating Sequential Processes&lt;/a&gt;
is one of the seminal book in this field,
which is more often mentioned than studied.
This is the reason I wish
to write a series of blog posts
about the book,
which mainly served as some kind of reading notes for myself,
and additionally, a summary for those who are interested, and
to lure them into serious study.&lt;/p&gt;

&lt;p&gt;Beside the original book,&lt;a href=&#34;http://www.cs.ox.ac.uk/bill.roscoe/publications/68b.pdf&#34;&gt;Theory and Practice of Concurrency&lt;/a&gt;,
a more recent book written by A.W. Roscoe,
also provides a good introduction to the subject.
In the future post,
I will try to write up what I have learned
from reading these 2 book closely.&lt;/p&gt;

&lt;p&gt;At the mean time, I have included a few interesting
videos that inspire my study.
The first 1 is the introduction of the
core-async library,
which is an implementation of the CSP,
by Rich Hickey, the creator of clojure.
And the other 2 are the introduction
to concurrency using Go language by
Rob Pike, once of the creator of Go.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.infoq.com/presentations/core-async-clojure&#34;&gt;Rich Hickey Video1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Origins of Go Concurrency style by Rob Pike
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/3DtUzH3zoFo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;Concurrency Is Not Parallelism by Rob Pike
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/cN_DpYBzKso&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Actor Model&lt;/h3&gt;

&lt;p&gt;Besides CSP, actor model is another
conceptual framework to study concurrency.
In a sense, actor model is more
general than CSP for it is also
a model of computation in general.&lt;/p&gt;

&lt;p&gt;Perhaps the best introduction to the actor model
is the paper &lt;a href=&#34;http://arxiv.org/pdf/1008.1459.pdf&#34;&gt;Actor Model of Computation: Scalable Robust Information Systems&lt;/a&gt;
by the creator of the model himself, Carl Hewitt.&lt;/p&gt;

&lt;p&gt;For those who enjoy intellectual conversation,
here is a whiteboard session
by Carl Hewitt and Erik Meijer.&lt;/p&gt;

&lt;p&gt;Everything You Want to Know about Actor Model by Hewitt, Meijer and Szyperski
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/7erJ1DV_Tlo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;Finally, for the comparison of actor model and CSP,
here is a good article.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.informit.com/articles/article.aspx?p=1768317&#34;&gt;A Tale of Two Concurrency Models: Comparing the Go and Erlang Programming Languages&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Of Human Achievement</title>
      <link>http://localhost:1313/post/20140713_history</link>
      <pubDate>Sun, 13 Jul 2014 06:22:47 UTC</pubDate>
      
      <guid>http://localhost:1313/post/20140713_history</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The art of man is able to construct monuments
far more permanent than the narrow span of
his own existence; yet these monuments,
like himeself, are perishable and frail;
and, in the boundless annals of time,
his life and his labours must equally
be measured as a fleeting moment.&lt;/p&gt;

&lt;p&gt;Edward Gibbon, The Decline and Fall of the Roman Empire, Chap. 71&lt;/p&gt;

&lt;p&gt;Herodotus, from Halicarnassus,
here displays his enquiries,
that human achievement may be
spared the ravage of time.
And that everything great and
astounding, and all the glory
of those exploits which
served to display Greeks and Barbarians
alike to such effect, be kept alive -
and additionally, and most importantly,
to give the reason they wen to war.&lt;/p&gt;

&lt;p&gt;Herodotus, The Histories, Chap.1(Translated by Tom Holland)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Reflect, Refine, Refactor</title>
      <link>http://localhost:1313/post/first</link>
      <pubDate>Fri, 11 Jul 2014 08:13:40 UTC</pubDate>
      
      <guid>http://localhost:1313/post/first</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Reflect, Refine, Refactor&lt;/h2&gt;

&lt;p&gt;Today I have read the book &amp;ldquo;Show Your Work&amp;rdquo; by Austin Kleon,
the very same author who brought us &amp;ldquo;Steal Like an Artist&amp;rdquo;.
Following the tradition of his previous book,
the author serves us nuggets of advices,
One of them that particularly
resonates with me is: &lt;em&gt;Become a documentarian of what you do&lt;/em&gt;.
In the context of exposing yourself to the world,
which is the theme of this book,
the documentation of your working process serves 2 purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;By far it is a superior way to showcase your work
and your contributions than a traditional resume.&lt;/li&gt;
&lt;li&gt;It is also the source of materials that you want to share
with the world in order to be known.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However in this blog post, I am going to focus on its role
in self development, in improving ourselves in general.&lt;/p&gt;

&lt;p&gt;It is not a secret that writing down our though
will help us to think clearer. Genius like
Leornado Da Vinci left behind tons of notebooks,
full of his casual observations, beautiful sketches,
riddles, meditations and a wide range of other writings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/notebook.jpg&#34; alt=&#34;Notebook&#34; title=&#34;Da Vinci&#39;s Notebook&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;But perhaps none other than a genius of our time,
Prof. Edsger Wybe Dijkstra, a famous computer scientist,
can illustrate the point better.
In the following video interview, entitled &amp;ldquo;Discipline in Thought&amp;rdquo;,
he mentioned his daily discipline of
writing down clearly his thoughts,
which lead to hundreds of scientific papers
archived in &lt;a href=&#34;http://www.cs.utexas.edu/users/EWD/&#34;&gt;EWD Archive&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&#34;420&#34; height=&#34;315&#34; align=&#34;middle&#34;
src=&#34;//www.youtube.com/embed/EL97C8C53ZM&#34; 
frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
&lt;p&gt;You think you know when you learn, are more sure when you
can write, even more when you can teach, but certain
when you can program.&lt;/p&gt;

&lt;p&gt;~ Alan Perlis&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Writing things down forces us to reflect on our thinking process,
encourages us to refine our logical arguments,
and to further consider some subtleties which
we might miss on the first occasion.
But perhaps more importantly, writing allows us
to look at our thought more objectively because
now it is out there, on a piece of paper, not
inside our head. The new gain objectivity thus allows
us to refine our idea further.
Take programming as an example, writing down a program
require us to gain a fairly good understanding of a problem,
and by refactoring the program our understanding goes
even deeper. Notice that our understanding is spiraling up,
as a effect of constant writing and refactoring.&lt;/p&gt;

&lt;p&gt;We can observe the same pattern in many other different areas.
For example, internal emotional mastery begin with
noticing the inner experiences and to be able to
articulate them in such a way to gain some conscious
control over them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Become aware of internal, subjective sub-verbal experiences,
so that these experiences can be brought into the
world of abstraction, of conversation, of naming, etc.,
with the consequence of that it immediately becomes possible
for a certain amount of control to be exerted
over these hither unconscious and uncontrollable processes.&lt;/p&gt;

&lt;p&gt;~ Abraham Maslow&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what education is all about: to be able
to learn, unlearn, and relearn;
to break down our old understanding and
build up a new understanding;
to refactor our thinking.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I would define intellectual elegance
as a mind that is continually refine
itself with education and knowledge.&lt;/p&gt;

&lt;p&gt;~ Massimo Vignelli&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In general, this is how we improve our life.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At every moment, step by step,
one must confront what one is thinking and what one is doing,
with what one is.&lt;/p&gt;

&lt;p&gt;~ Michel Foucalt&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>